<?php
namespace Training4\Vendor\Model\ResourceModel\Vendor;
use Magento\Framework\Data\Collection\AbstractDb;

/**
 * Class Collection
 *
 * @package Training4\Vendor\Model\ResourceModel\Vendor
 */
class Collection extends \Magento\Framework\Model\ResourceModel\Db\Collection\AbstractCollection
{
    /**
     * @var \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory
     */
    protected $_productCollection;

    /**
     * @param \Magento\Framework\Data\Collection\EntityFactoryInterface $entityFactory
     * @param \Psr\Log\LoggerInterface $logger
     * @param \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy
     * @param \Magento\Framework\Event\ManagerInterface $eventManager
     * @param \Magento\Framework\DB\Adapter\AdapterInterface $connection
     * @param \Magento\Framework\Model\ResourceModel\Db\AbstractDb $resource
     * @param \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory $collectionFactory
     */
    public function __construct(
        \Magento\Framework\Data\Collection\EntityFactoryInterface $entityFactory,
        \Psr\Log\LoggerInterface $logger,
        \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy,
        \Magento\Framework\Event\ManagerInterface $eventManager,
        \Magento\Framework\DB\Adapter\AdapterInterface $connection = null,
        \Magento\Framework\Model\ResourceModel\Db\AbstractDb $resource = null,
        \Magento\Catalog\Model\ResourceModel\Product\CollectionFactory $collectionFactory
    )
    {
        $this->_productCollection = $collectionFactory->create();
        parent::__construct($entityFactory, $logger, $fetchStrategy, $eventManager, $connection, $resource); // TODO: Change the autogenerated stub
    }

    /**
     * Define resource model
     *
     * @return void
     */
    protected function _construct()
    {
        $this->_init('Training4\Vendor\Model\Vendor', 'Training4\Vendor\Model\ResourceModel\Vendor');
    }

    /**
     * Join product relation table if there is product filter
     *
     * @param string $tableName
     * @param string|null $linkField
     * @return void
     */
    protected function joinProductRelationTable($tableName, $linkField)
    {
        $this->getSelect()->join(
            ['product_table' => $this->getTable($tableName)],
                'main_table.' . $linkField . ' = product_table.' . $linkField,
                []
            )->group(
                'main_table.' . $linkField
            );
        parent::_renderFiltersBefore();
    }

    /**
     * Join store relation table if there is store filter
     *
     * @return void
     */
    protected function _renderFiltersBefore()
    {
        $this->joinProductRelationTable('training4_vendor2product', 'vendor_id');
    }

    /**
     * @return \Magento\Catalog\Model\ResourceModel\Product\Collection|\Magento\Catalog\Model\ResourceModel\Product\CollectionFactory
     */
    public function getRelatedProductCollection()
    {
        $this->_productCollection->getSelect()->join(
            ['product_related_table' => $this->getTable('training4_vendor2product')],
            'main_table' . 'entity_id' . '= product_related_table.' . 'product_id',
            []
        )->group('main_table.' . 'entity_id');
        return $this->_productCollection;
    }
}
